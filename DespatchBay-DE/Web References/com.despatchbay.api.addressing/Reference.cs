//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DespatchBay_DE.com.despatchbay.api.addressing {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AddressingServiceBinding", Namespace="urn:despatchbay")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(AddressKeyType))]
    public partial class AddressingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FindAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressByKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddressKeysByPostcodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AddressingService() {
            this.Url = global::DespatchBay_DE.Properties.Settings.Default.DespatchBay_DE_com_despatchbay_api_addressing_AddressingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FindAddressCompletedEventHandler FindAddressCompleted;
        
        /// <remarks/>
        public event GetAddressByKeyCompletedEventHandler GetAddressByKeyCompleted;
        
        /// <remarks/>
        public event GetAddressKeysByPostcodeCompletedEventHandler GetAddressKeysByPostcodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#FindAddress", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressType FindAddress(string postcode, string property) {
            object[] results = this.Invoke("FindAddress", new object[] {
                        postcode,
                        property});
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void FindAddressAsync(string postcode, string property) {
            this.FindAddressAsync(postcode, property, null);
        }
        
        /// <remarks/>
        public void FindAddressAsync(string postcode, string property, object userState) {
            if ((this.FindAddressOperationCompleted == null)) {
                this.FindAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAddressOperationCompleted);
            }
            this.InvokeAsync("FindAddress", new object[] {
                        postcode,
                        property}, this.FindAddressOperationCompleted, userState);
        }
        
        private void OnFindAddressOperationCompleted(object arg) {
            if ((this.FindAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAddressCompleted(this, new FindAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetAddressByKey", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressType GetAddressByKey(string key) {
            object[] results = this.Invoke("GetAddressByKey", new object[] {
                        key});
            return ((AddressType)(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressByKeyAsync(string key) {
            this.GetAddressByKeyAsync(key, null);
        }
        
        /// <remarks/>
        public void GetAddressByKeyAsync(string key, object userState) {
            if ((this.GetAddressByKeyOperationCompleted == null)) {
                this.GetAddressByKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressByKeyOperationCompleted);
            }
            this.InvokeAsync("GetAddressByKey", new object[] {
                        key}, this.GetAddressByKeyOperationCompleted, userState);
        }
        
        private void OnGetAddressByKeyOperationCompleted(object arg) {
            if ((this.GetAddressByKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressByKeyCompleted(this, new GetAddressByKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:despatchbay#GetAddressKeysByPostcode", RequestNamespace="urn:despatchbay", ResponseNamespace="urn:despatchbay")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public AddressKeyType[] GetAddressKeysByPostcode(string postcode) {
            object[] results = this.Invoke("GetAddressKeysByPostcode", new object[] {
                        postcode});
            return ((AddressKeyType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAddressKeysByPostcodeAsync(string postcode) {
            this.GetAddressKeysByPostcodeAsync(postcode, null);
        }
        
        /// <remarks/>
        public void GetAddressKeysByPostcodeAsync(string postcode, object userState) {
            if ((this.GetAddressKeysByPostcodeOperationCompleted == null)) {
                this.GetAddressKeysByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddressKeysByPostcodeOperationCompleted);
            }
            this.InvokeAsync("GetAddressKeysByPostcode", new object[] {
                        postcode}, this.GetAddressKeysByPostcodeOperationCompleted, userState);
        }
        
        private void OnGetAddressKeysByPostcodeOperationCompleted(object arg) {
            if ((this.GetAddressKeysByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddressKeysByPostcodeCompleted(this, new GetAddressKeysByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:despatchbay")]
    public partial class AddressType {
        
        private string companyNameField;
        
        private string streetField;
        
        private string localityField;
        
        private string townCityField;
        
        private string countyField;
        
        private string postalCodeField;
        
        private string countryCodeField;
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Locality {
            get {
                return this.localityField;
            }
            set {
                this.localityField = value;
            }
        }
        
        /// <remarks/>
        public string TownCity {
            get {
                return this.townCityField;
            }
            set {
                this.townCityField = value;
            }
        }
        
        /// <remarks/>
        public string County {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:despatchbay")]
    public partial class AddressKeyType {
        
        private string keyField;
        
        private string addressField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void FindAddressCompletedEventHandler(object sender, FindAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAddressByKeyCompletedEventHandler(object sender, GetAddressByKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressByKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressByKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetAddressKeysByPostcodeCompletedEventHandler(object sender, GetAddressKeysByPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddressKeysByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddressKeysByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddressKeyType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddressKeyType[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591